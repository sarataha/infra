name: CI

on:
  pull_request:
    branches: [ main, master ]
    paths:
      - 'modules/**'
      - 'environments/**'
      - '_global/**'
      - 'root.hcl'
      - '.github/workflows/terraform-ci.yml'
  push:
    branches: [ main, master ]
    paths:
      - 'modules/**'
      - 'environments/**'
      - '_global/**'
      - 'root.hcl'
      - '.github/workflows/terraform-ci.yml'
  workflow_dispatch:

env:
  TF_VERSION: '1.13.3'
  TG_VERSION: '0.78.0'
  TFLINT_VERSION: 'v0.59.1'

jobs:
  validate:
    name: Validate Terraform Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          wget -q https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TG_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          terragrunt --version

      - name: Terraform Format Check
        run: |
          echo "Checking Terraform formatting..."
          terraform fmt -check -recursive modules/

      - name: Validate Modules
        run: |
          echo "Validating VPC module..."
          cd modules/vpc && terraform init -backend=false && terraform validate
          cd ../..

          echo "Validating IAM module..."
          cd modules/iam && terraform init -backend=false && terraform validate
          cd ../..

          echo "Validating ECR module..."
          cd modules/ecr && terraform init -backend=false && terraform validate
          cd ../..

          echo "Validating RDS module..."
          cd modules/rds && terraform init -backend=false && terraform validate
          cd ../..

          echo "Validating EKS module..."
          cd modules/eks && terraform init -backend=false && terraform validate
          cd ../..

          echo "Validating GitHub OIDC module..."
          cd modules/github-oidc && terraform init -backend=false && terraform validate
          cd ../..

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: ${{ env.TFLINT_VERSION }}

      - name: Initialize TFLint
        run: tflint --init

      - name: Run TFLint
        run: |
          echo "Running TFLint on modules..."
          for module in modules/*/; do
            echo "Linting $module"
            tflint --chdir="$module" --format compact
          done
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: modules/
          framework: terraform
          soft_fail: true
          output_format: cli

  plan-dev:
    name: Terragrunt Plan (Dev)
    runs-on: ubuntu-latest
    needs: [validate]
    if: github.event_name == 'pull_request'

    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          wget -q https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TG_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt

      - name: Terragrunt Plan All
        run: |
          cd environments/dev
          terragrunt run --all plan

  apply-dev:
    name: Terragrunt Apply (Dev)
    runs-on: ubuntu-latest
    needs: [validate, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: dev
      url: https://console.aws.amazon.com/eks/home?region=us-east-1

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          wget -q https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TG_VERSION }}/terragrunt_linux_amd64
          chmod +x terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt

      - name: Terragrunt Apply All
        run: |
          cd environments/dev
          terragrunt run --all apply
